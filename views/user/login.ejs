<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Login</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Poppins', sans-serif;
    }
    
    :root {
      --primary: #6c5ce7;
      --primary-light: #a29bfe;
      --secondary: #00cec9;
      --accent: crimson;
      --dark: #2d3436;
      --light: #dfe6e9;
      --success: #00b894;
      --error: #d63031;
      --action: aqua;
      --action-hover: #00b3b3;
      --gradient: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
    }
    
    body {
      background: linear-gradient(135deg, #c8d6e5 0%, #dfe6e9 100%);
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 20px;
      overflow-x: hidden;
    }
    
    .container {
      max-width: 600px;
      margin: 50px auto;
      padding: 30px;
      background-color: white;
      border-radius: 20px;
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1), 
                  0 5px 15px rgba(0, 0, 0, 0.05);
      text-align: center;
      transform: translateY(20px);
      opacity: 0;
      animation: fadeInUp 0.8s forwards;
    }
    
    @keyframes fadeInUp {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    .form-header {
      background: var(--gradient);
      margin: -30px -30px 25px -30px;
      padding: 25px 30px;
      border-radius: 20px 20px 0 0;
      position: relative;
      overflow: hidden;
    }
    
    .form-header::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, transparent 60%);
      animation: shimmer 5s infinite linear;
    }
    
    @keyframes shimmer {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }
    
    .form-header h1 {
      color: white;
      margin-bottom: 0;
      position: relative;
      z-index: 1;
      text-shadow: 0 2px 4px rgba(0,0,0,0.1);
      font-weight: 600;
      font-size: 28px;
    }
    
    form {
      display: flex;
      flex-direction: column;
      margin-top: 30px;
    }
    
    .input-group {
      position: relative;
      margin-bottom: 20px;
      text-align: left;
    }
    
    input {
      width: 100%;
      padding: 14px 18px;
      border: 2px solid var(--light);
      border-radius: 12px;
      font-size: 16px;
      transition: all 0.3s ease;
      background-color: #f9f9f9;
      color: var(--dark);
      box-shadow: inset 0 1px 3px rgba(0,0,0,0.05);
      opacity: 0;
      transform: translateX(-10px);
      animation: slideIn 0.5s forwards;
    }
    
    @keyframes slideIn {
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
    
    input:nth-child(1) { animation-delay: 0.1s; }
    input:nth-child(2) { animation-delay: 0.2s; }
    
    input:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.2);
      transform: scale(1.02);
    }
    
    input::placeholder {
      color: #b2bec3;
      transition: all 0.3s ease;
    }
    
    input:focus::placeholder {
      opacity: 0.5;
      transform: translateX(5px);
    }
    
    .error {
      color: var(--error);
      font-size: 14px;
      margin-top: 5px;
      font-weight: 500;
      transform: translateY(-5px);
      opacity: 0;
      transition: all 0.3s ease;
    }
    
    .error:not(:empty) {
      transform: translateY(0);
      opacity: 1;
      animation: shake 0.5s;
    }
    
    @keyframes shake {
      0%, 100% { transform: translateX(0); }
      20%, 60% { transform: translateX(-5px); }
      40%, 80% { transform: translateX(5px); }
    }
    
    .remember-forgot {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
      opacity: 0;
      animation: fadeIn 0.5s 0.3s forwards;
    }
    
    .remember {
      display: flex;
      align-items: center;
    }
    
    .remember input[type="checkbox"] {
      margin-right: 8px;
      width: auto;
      transform: scale(1.2);
      cursor: pointer;
    }
    
    .remember label {
      cursor: pointer;
      font-size: 14px;
    }
    
    .forgot-password {
      color: var(--primary);
      text-decoration: none;
      font-size: 14px;
      font-weight: 500;
      transition: all 0.3s ease;
    }
    
    .forgot-password:hover {
      color: var(--secondary);
      text-decoration: underline;
    }
    
    .login-btn {
      background: var(--gradient);
      color: white;
      border: none;
      border-radius: 12px;
      padding: 14px;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-top: 10px;
      box-shadow: 0 5px 15px rgba(108, 92, 231, 0.3);
      position: relative;
      overflow: hidden;
      animation: fadeIn 1s 0.5s forwards;
      opacity: 0;
      letter-spacing: 0.5px;
    }
    
    @keyframes fadeIn {
      to { opacity: 1; }
    }
    
    .login-btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 20px rgba(108, 92, 231, 0.4);
    }
    
    .login-btn:active {
      transform: translateY(0);
      box-shadow: 0 3px 10px rgba(108, 92, 231, 0.3);
    }
    
    .login-btn::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 5px;
      height: 5px;
      background: rgba(255, 255, 255, 0.5);
      opacity: 0;
      border-radius: 100%;
      transform: scale(1, 1) translate(-50%);
      transform-origin: 50% 50%;
    }
    
    .login-btn:focus:not(:active)::after {
      animation: ripple 1s ease-out;
    }
    
    @keyframes ripple {
      0% {
        transform: scale(0, 0);
        opacity: 0.5;
      }
      100% {
        transform: scale(20, 20);
        opacity: 0;
      }
    }
    
    .action-btn {
      background-color: var(--action);
      color: var(--dark);
      padding: 12px 20px;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      font-weight: 500;
      transition: all 0.3s ease;
      margin-top: 20px;
      box-shadow: 0 3px 10px rgba(0, 206, 201, 0.2);
      animation: fadeIn 1s 0.7s forwards;
      opacity: 0;
    }
    
    .action-btn:hover {
      background-color: var(--action-hover);
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0, 206, 201, 0.3);
    }
    
    .divider {
      display: flex;
      align-items: center;
      margin: 25px 0;
      opacity: 0;
      animation: fadeIn 0.5s 0.6s forwards;
    }
    
    .divider::before, .divider::after {
      content: "";
      flex: 1;
      height: 1px;
      background-color: var(--light);
    }
    
    .divider span {
      padding: 0 15px;
      color: #b2bec3;
      font-size: 14px;
    }
    
    .register-link {
      margin-top: 20px;
      color: var(--dark);
      font-size: 14px;
      opacity: 0;
      animation: fadeIn 0.5s 0.8s forwards;
    }
    
    .register-link a {
      color: var(--primary);
      text-decoration: none;
      font-weight: 600;
      transition: all 0.3s ease;
    }
    
    .register-link a:hover {
      color: var(--secondary);
      text-decoration: underline;
    }
    
    /* Responsive design */
    @media (max-width: 600px) {
      .container {
        padding: 20px;
        margin: 20px auto;
      }
      
      .form-header {
        margin: -20px -20px 20px -20px;
        padding: 20px;
      }
      
      input, .login-btn, .action-btn {
        padding: 12px;
        font-size: 14px;
      }
      
      .remember-forgot {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
      }
    }
  </style>
</head>
<body>

  <div class="container">
    <div class="form-header">
      <h1>Student Login</h1>
    </div>
    
    <form id="loginForm" action="/login" method="POST" onsubmit="return loginUser(event)">
      <div class="input-group">
        <input type="text" id="email" name="email" placeholder="Email or Student ID"  />
        <div id="emailError" class="error"></div>
      </div>
      
      <div class="input-group">
        <input type="password" id="password" name="password" placeholder="Password"  />
        <div id="passwordError" class="error"></div>
      </div>
      

      
      <button type="submit" class="login-btn">Login</button>
      
      <div class="divider">
        <span>OR</span>
      </div>
     
      
      <div class="register-link">
        Don't have an account? <a href="/signup">Register now</a>
      </div>
    </form>
  </div>

  <script>
    async function loginUser(event) {
      event.preventDefault();

      // Clear previous errors
      document.getElementById('emailError').textContent = '';
      document.getElementById('passwordError').textContent = '';

      const email = document.getElementById('email').value.trim();
      const password = document.getElementById('password').value.trim();
      let hasError = false;

      if (!email) {
        document.getElementById('emailError').textContent = 'Email is required';
        hasError = true;
      }
      if (!password) {
        document.getElementById('passwordError').textContent = 'Password is required';
        hasError = true;
      }

      if (hasError) return false;

      try {
        const response = await fetch('/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ email, password })
        });

        const data = await response.json();

        if (data.success) {
          console.log("umbiii")
          window.location.href = '/';
        } else {
          // Display the message in the correct error field
          if (data.message.toLowerCase().includes('email')) {
            document.getElementById('emailError').textContent = data.message;
          } else if (data.message.toLowerCase().includes('password')) {
            document.getElementById('passwordError').textContent = data.message;
          }else if(data.message.toLowerCase().includes('blocked')){
            document.getElementById('passwordError').textContent = data.message;
          } else {
            // fallback for other error messages
            alert(data.message || 'Login failed. Try again.');
          }
        }
      } catch (error) {
        console.error('Error during login:', error);
        alert('Something went wrong. Please try again.');
      }
  }

  </script>

</body>
</html>
